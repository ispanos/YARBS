#!/bin/env python3

import re
from signal import signal, SIGINT
from sys import exit
from getpass import getpass
import json
import subprocess


def handler(signal_received, frame):
    # Handle any cleanup here
    print('\n\nSIGINT or CTRL-C detected. User terminated the script.')
    exit(0)


def get_name():
    '''
    Askes user for a username until a valid one is given.
    Returns that username as a string.
    '''
    valid_pattern = "^[a-z]+[a-zA-Z0-9_.-]+$"
    user_name = input("Enter the name of your new user: \n")
    if len(user_name) <= 31 and re.search(valid_pattern, user_name):
        return user_name
    else:
        print("\n\nInvalid username.\n",
              "User name must start with lowercase letter and can include:\n",
              "lowercase letters\n numbers\n \"-\" and \"_\".")
        return get_name()


def get_password(user='user'):
    '''
    Askes for user's password twice.
    '''
    pass1 = getpass('Enter ' + user + '\'s password.')
    pass2 = getpass('Re-enter ' + user + '\'s password.')

    if pass1 == pass2:
        return pass1
    else:
        print("\nPasswords didn't match.")
        return get_password(user)


def choose_drive():
    process = subprocess.run("/usr/bin/lsblk --json -o NAME,MOUNTPOINT".split(),
                             capture_output=True, text=True)

    # blockdevices is a dictionary with all the info from lsblk.
    blockdevices = json.loads(process.stdout).get("blockdevices")

    def check_mounted(drive):
        if drive.get("mountpoint"):
            return True
        if drive.get("children"):
            for partition in drive.get("children"):
                return check_mounted(partition)

    return [("/dev/" + drive.get("name"),
             check_mounted(drive)) for drive in blockdevices]


if __name__ == "__main__":
    signal(SIGINT, handler)


#    password = get_password(get_name())
#    print(choose_drive())
