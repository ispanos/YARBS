# NAME,PURPOSE,REPO
i3-wm,is the main graphical user interface and window manager,
i3blocks,is the status bar,
i3lock,is the screen lock,xserver-xorg,is the graphical server,
x11_utils,allows querying information about windows,
x11-xserver-utils,,
xinit,starts the graphical server,
fonts-font-awesome,,
fonts-linuxlibertine,provides the sans and serif fonts for LARBS,

maininstall() { # Installs all needed programs from main repo
	dialog --title LARBS Installation --infobox Installing \`$1\` ($n of $total) $1 $2 5 70
	sudo apt install -y $1 >/dev/null 2>&1
	}

gitmakeinstall() {
	dir=$(mktemp -d)
	dialog --title LARBS Installation --infobox Installing \`$(basename $1)\` ($n of $total) via \`git\` and \`make\` $(basename $1) $2 5 70
	git clone --depth 1 $1 $dir >/dev/null 2>&1
	cd $dir || exit
	make >/dev/null 2>&1
	make install >/dev/null 2>&1
	cd /tmp || return ;
	}

ppainstall() { \
	# ppa:kgilmer/speed-ricer
	ppa=$(echo $3 | sed -e 's/^//' -e 's/$//')
	add-apt-repository $ppa -y >/dev/null 2>&1
	apt update >/dev/null 2>&1
	apt install $1 -y >/dev/null 2>&1
 	}

pipinstall() { \
	dialog --title LARBS Installation --infobox Installing the Python package \`$1\` ($n of $total) $1 $2 5 70
	command -v pip || sudo apt install python-pip >/dev/null 2>&1
	yes | pip install $1
	}

installationloop() { \
	([ -f $progsfile ] && cp $progsfile /tmp/progscsv) || curl -Ls $progsfile | sed '/^#/d' > /tmp/progscsv
	total=$(wc -l < /tmp/progscsv)
	while IFS=, read -r tag program comment ppa; do
		n=$((n+1))
		echo $comment | grep ^\*\$ >/dev/null 2>&1 && comment=$(echo $comment | sed s/\(^\\|\$\)//g)
		case $tag in
			) maininstall $program $comment ;;
			X) ppainstall $program $comment $ppa ;;
			G) gitmakeinstall $program $comment ;;
			P) pipinstall $program $comment ;;
		esac
	done < /tmp/progscsv ;
	}


'''
For Gnome
hostnamectl set-hostname killua
sudo  sed -i 's/Logo=1/Logo=0/g' /etc/libreoffice/sofficerc
sudo gpasswd -a yiannis docker

dconf watch /
/org/gnome/desktop/input-sources/sources
[('xkb', 'us'), ('xkb', 'gr')]

#power_to_sleep()
/org/gnome/settings-daemon/plugins/power/power-button-action
'suspend'

# Focus on Hover  
/org/gnome/desktop/wm/preferences/focus-mode
'sloppy'

# Raise windows when focused
/org/gnome/desktop/wm/preferences/auto-raise
true

# Workspaces for all dispays
/org/gnome/mutter/workspaces-only-on-primary
false

/org/gnome/shell/favorite-apps 
['firefoxdesktop', 'orggnomeNautilusdesktop', 'orggnomeTerminaldesktop', 'ioelementaryappcenterdesktop', 'codedesktop']
'''